---
import HeaderLink from './HeaderLink.astro';
import ThemeToggle from './ThemeToggle.astro';
---

<header>
	<nav>
		<h2>
			<a href="/">
				<!-- <span class="logo-icon-container">
					<img src="/smile.svg" alt="Light mode icon" class="logo-icon light-icon" width="36" height="36" />
					<img src="/dark-smile.svg" alt="Dark mode icon" class="logo-icon dark-icon" width="36" height="36" />
				</span> -->
				<div class="logo">
					<div class="logo-mark">
						<div class="hexagon">
							<div class="hexagon-inner">
								<span class="logo-icon-container">
									<img src="/smile.png" alt="Light mode icon" class="logo-icon" width="34" height="34" />
								</span>
							</div>
						</div>
					</div>
				</div>
			</a>
		</h2>
		<div id="primary-navigation" class="internal-links">
			<HeaderLink href="/">Home</HeaderLink>
			<HeaderLink href="/projects">Projects</HeaderLink>
			<HeaderLink href="/blog">Blog</HeaderLink>
			<HeaderLink href="/about">About</HeaderLink>
		</div>
		<button id="mobile-menu-toggle" class="menu-toggle" type="button" aria-controls="primary-navigation" aria-expanded="false" aria-label="Toggle navigation">
			<svg class="icon hamburger" width="28" height="28" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
				<path d="M3 6H21" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
				<path d="M3 12H21" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
				<path d="M3 18H21" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
			</svg>
			<svg class="icon close" width="28" height="28" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
				<path d="M6 6L18 18" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
				<path d="M6 18L18 6" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
			</svg>
		</button>
		<!-- <div class="social-links">
			<a href="https://github.com/KhaledR57" target="_blank" aria-label="GitHub">
				<svg viewBox="0 0 16 16" aria-hidden="true" width="24" height="24">
					<path
						fill="currentColor"
						d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.012 8.012 0 0 0 16 8c0-4.42-3.58-8-8-8z"
					></path>
				</svg>
			</a>
			<a href="https://linkedin.com/in/khaled-amr-dev" target="_blank" aria-label="LinkedIn">
				<svg viewBox="0 0 24 24" aria-hidden="true" width="24" height="24">
					<path
						fill="currentColor"
						d="M20.5 2h-17A1.5 1.5 0 002 3.5v17A1.5 1.5 0 003.5 22h17a1.5 1.5 0 001.5-1.5v-17A1.5 1.5 0 0020.5 2zM8 19H5v-9h3zM6.5 8.25A1.75 1.75 0 118.3 6.5a1.78 1.78 0 01-1.8 1.75zM19 19h-3v-4.74c0-1.42-.6-1.93-1.38-1.93A1.74 1.74 0 0013 14.19V19h-3v-9h2.9v1.3a3.11 3.11 0 012.7-1.4c1.55 0 3.36.86 3.36 3.66z"
					></path>
				</svg>
			</a>
			<a href="https://twitter.com/khaled_dev" target="_blank" aria-label="Twitter">
				<svg viewBox="0 0 16 16" aria-hidden="true" width="24" height="24">
					<path
						fill="currentColor"
						d="M5.026 15c6.038 0 9.341-5.003 9.341-9.334 0-.14 0-.282-.006-.422A6.685 6.685 0 0 0 16 3.542a6.658 6.658 0 0 1-1.889.518 3.301 3.301 0 0 0 1.447-1.817 6.533 6.533 0 0 1-2.087.793A3.286 3.286 0 0 0 7.875 6.03a9.325 9.325 0 0 1-6.767-3.429 3.289 3.289 0 0 0 1.018 4.382A3.323 3.323 0 0 1 .64 6.575v.045a3.288 3.288 0 0 0 2.632 3.218 3.203 3.203 0 0 1-.865.115 3.23 3.23 0 0 1-.614-.057 3.283 3.283 0 0 0 3.067 2.277A6.588 6.588 0 0 1 .78 13.58a6.32 6.32 0 0 1-.78-.045A9.344 9.344 0 0 0 5.026 15z"
					></path>
				</svg>
			</a>
		</div> -->
		<ThemeToggle />
	</nav>
</header>

<!-- Scroll to top button -->
<button id="scroll-to-top" class="scroll-to-top" aria-label="Scroll to top">
	<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
		<path d="M12 4L6 10H9V20H15V10H18L12 4Z" fill="currentColor"/>
	</svg>
</button>
<style>
	header {
		margin: 0;
		padding: 0 1em;
		background-color: var(--header-bg) !important; /* Force override */
		box-shadow: var(--header-shadow);
		position: sticky;
		top: 0;
		z-index: 100;
		transition: all var(--transition-speed) ease;
		backdrop-filter: blur(10px);
		-webkit-backdrop-filter: blur(10px);
		border-bottom: 1px solid rgba(0, 0, 0, 0.05);
		transform: translateY(0);
	}

	header.header-hidden {
		transform: translateY(-100%);
	}

	html.dark header {
		border-bottom: 1px solid rgba(255, 255, 255, 0.05);
	}
	
	h2 {
		margin: 0;
		font-size: 1.2em;
		font-weight: 700;
	}

	h2 a,
	h2 a.active {
		text-decoration: none;
		color: var(--accent-color);
		display: flex;
		align-items: center;
		gap: 0.5rem;
	}
	
	.logo {
		position: relative;
		display: flex;
		align-items: center;
		font-feature-settings: "liga" 0;
		z-index: 1;
		gap: 0.6rem;
		padding: 0.2rem;
	}
	
	.logo-mark {
		position: relative;
		width: 2.5rem;
		height: 2.5rem;
	}
	
	.hexagon {
		width: 100%;
		height: 100%;
		background-color: rgba(var(--accent-rgb), 0.1);
		display: flex;
		align-items: center;
		justify-content: center;
		transform: rotate(0deg);
		transition: transform 0.3s ease, background-color 0.3s ease;
	}
	
	
	.hexagon-inner {
		scale: 1.5;
		display: flex;
		align-items: center;
		justify-content: center;
		transition: transform 0.3s ease;
		overflow: hidden;
	}

	
	.logo-type {
		display: flex;
		flex-direction: column;
		align-items: flex-start;
		line-height: 1;
	}
	
	.logo-name {
		font-size: 1.1rem;
		font-weight: 600;
		background: var(--accent-gradient);
		background-size: 200%;
		-webkit-background-clip: text;
		background-clip: text;
		-webkit-text-fill-color: transparent;
		letter-spacing: -0.02em;
	}
	
	.logo-code {
		font-size: 0.85rem;
		font-weight: 500;
		color: var(--text-secondary);
		letter-spacing: 0.05em;
	}
	
	
	.logo-icon-container {
		display: inline-flex;
		position: relative;
		width: 24px;
		height: 24px;
		transform: scale(1);
		transition: transform 0.3s ease;
	}

	.logo-icon {
		width: 24px;
		height: 24px;
		position: absolute;
		left: 0;
		top: 0;
		transition: opacity 0.3s ease, transform 0.3s ease;
	}
	
	nav {
		display: flex;
		align-items: center;
		justify-content: space-between;
		padding: 0.5rem 1rem;
		max-width: 1200px;
		margin: 0 auto;
	}
	.internal-links {
		display: flex;
		gap: 1rem;
	}
	nav a {
		padding: 0.5em;
		color: var(--text-secondary);
		font-weight: 500;
		text-decoration: none;
		transition: color 0.2s ease;
		position: relative;
	}
	
	.internal-links a::after {
		content: '';
		position: absolute;
		bottom: 0;
		left: 50%;
		transform: translateX(-50%);
		width: 0;
		height: 2px;
		background: var(--accent-gradient);
		transition: width 0.3s ease;
		opacity: 0;
	}
	
	.internal-links a:hover::after,
	.internal-links a.active::after {
		width: 80%;
		opacity: 1;
	}
	
	nav a:hover {
		color: var(--accent-color);
	}
	nav a.active {
		color: var(--accent-color);
		font-weight: 600;
	}
	.social-links {
		display: flex;
		gap: 0.75rem;
		align-items: center;
	}
	.social-links a {
		display: flex;
		align-items: center;
		justify-content: center;
		padding: 0.5rem;
		color: var(--text-secondary);
		transition: color 0.2s ease;
	}
	.social-links a:hover {
		color: var(--accent-color);
	}

	/* Mobile menu toggle button */
	.menu-toggle {
		display: none;
		background: transparent;
		border: none;
		color: var(--text-color);
		padding: 0.35rem;
		border-radius: 0.5rem;
		cursor: pointer;
		transition: background-color var(--transition-speed) ease, color var(--transition-speed) ease;
	}
	.menu-toggle:hover {
		background: var(--hover-bg);
		color: var(--accent-color);
	}
	.menu-toggle .icon {
		width: 28px;
		height: 28px;
	}
	.menu-toggle .close {
		display: none;
	}
	.menu-toggle[aria-expanded="true"] .hamburger {
		display: none;
	}
	.menu-toggle[aria-expanded="true"] .close {
		display: inline;
	}
	/* Scroll to top button */
	.scroll-to-top {
		position: fixed;
		bottom: 2rem;
		right: 2rem;
		width: 3rem;
		height: 3rem;
		background: var(--accent-color);
		color: white;
		border: none;
		border-radius: 50%;
		cursor: pointer;
		display: flex;
		align-items: center;
		justify-content: center;
		box-shadow: var(--card-shadow);
		transition: all var(--transition-speed) ease;
		z-index: 1000;
		opacity: 0;
		visibility: hidden;
		transform: scale(0.8) translateY(20px);
	}

	.scroll-to-top.visible {
		opacity: 1;
		visibility: visible;
		transform: scale(1) translateY(0);
	}

	.scroll-to-top:hover {
		background: var(--accent-color-hover);
		transform: scale(1.1) translateY(-2px);
		box-shadow: 0 8px 25px rgba(var(--accent-color), 0.3);
	}

	.scroll-to-top:active {
		transform: scale(0.95) translateY(0);
	}

	@media (max-width: 720px) {
		nav {
			position: relative;
			flex-direction: row;
			align-items: center;
			padding: 0.5rem 1rem;
			gap: 0;
		}
		.menu-toggle {
			display: inline-flex;
			align-items: center;
			justify-content: center;
			position: absolute;
			left: 50%;
			top: 50%;
			transform: translate(-50%, -50%);
			z-index: 1001;
		}
		.internal-links {
			display: flex;
			position: fixed;
			left: 0;
			right: 0;
			top: var(--mobile-menu-top, 64px);
			width: 100%;
			box-sizing: border-box;
			background: var(--header-bg);
			border-bottom: 1px solid rgba(0, 0, 0, 0.05);
			box-shadow: var(--header-shadow);
			padding: 0.5rem 0 1rem;
			flex-direction: column;
			gap: 0.25rem;
			align-items: stretch;
			text-align: center;
			z-index: 1000;
			max-height: 0;
			overflow: hidden;
			opacity: 0;
			transform: translateY(-8px);
			pointer-events: none;
			transition: max-height 0.3s ease, opacity 0.2s ease, transform 0.2s ease;
		}
		html.dark .internal-links {
			border-bottom: 1px solid rgba(255, 255, 255, 0.06);
		}
		.internal-links.open {
			max-height: 80vh;
			opacity: 1;
			transform: translateY(0);
			pointer-events: auto;
		}
		.internal-links a {
			padding: 0.9rem 0rem;
			display: block;
			width: 100%;
			text-align: center;
		}
		.social-links {
			display: none;
		}
		.scroll-to-top {
			bottom: 1.5rem;
			right: 1.5rem;
			width: 2.5rem;
			height: 2.5rem;
		}
	}
</style>

<script>
	let lastScrollY = 0;
	let ticking = false;
	let isMenuOpen = false;

	function updateHeader() {
		const header = document.querySelector('header');
		const scrollToTopBtn = document.getElementById('scroll-to-top');
		const currentScrollY = window.scrollY;
		
		// Header hide/show logic
		if (currentScrollY > 100) { // Start hiding after 100px
			if (currentScrollY > lastScrollY) {
				// Scrolling down
				header?.classList.add('header-hidden');
			} else {
				// Scrolling up
				header?.classList.remove('header-hidden');
			}
		} else {
			// At top of page, always show header
			header?.classList.remove('header-hidden');
		}
		
		// Scroll to top button visibility
		if (currentScrollY > 300) {
			scrollToTopBtn?.classList.add('visible');
		} else {
			scrollToTopBtn?.classList.remove('visible');
		}
		
		lastScrollY = currentScrollY;
		// Keep menu positioned under sticky header when scrolling
		if (isMenuOpen) {
			updateMobileMenuTop();
		}
		ticking = false;
	}

	function requestTick() {
		if (!ticking) {
			requestAnimationFrame(updateHeader);
			ticking = true;
		}
	}

	// Scroll event listener
	window.addEventListener('scroll', requestTick);

	// Scroll to top button click handler
	document.getElementById('scroll-to-top')?.addEventListener('click', () => {
		window.scrollTo({
			top: 0,
			behavior: 'smooth'
		});
	});

	// Mobile menu logic
	const menuToggleButton = document.getElementById('mobile-menu-toggle');
	const internalLinks = document.querySelector('.internal-links');

	function updateMobileMenuTop() {
		const headerEl = document.querySelector('header') as HTMLElement | null;
		if (headerEl && internalLinks instanceof HTMLElement) {
			const topPx = headerEl.getBoundingClientRect().bottom;
			internalLinks.style.top = `${topPx}px`;
		}
	}

	function lockBodyScroll(lock: boolean) {
		if (lock) {
			document.body.style.overflow = 'hidden';
		} else {
			document.body.style.overflow = '';
		}
	}
	function closeMenu() {
		if (!isMenuOpen) return;
		isMenuOpen = false;
		menuToggleButton?.setAttribute('aria-expanded', 'false');
		internalLinks?.classList.remove('open');
		lockBodyScroll(false);
		document.removeEventListener('click', handleOutsideClick, true);
		document.removeEventListener('keydown', handleKeydown, true);
	}
	function openMenu() {
		if (isMenuOpen) return;
		isMenuOpen = true;
		menuToggleButton?.setAttribute('aria-expanded', 'true');
		internalLinks?.classList.add('open');
		updateMobileMenuTop();
		lockBodyScroll(true);
		document.addEventListener('click', handleOutsideClick, true);
		document.addEventListener('keydown', handleKeydown, true);
	}
	function handleOutsideClick(event: MouseEvent) {
		const nav = document.querySelector('nav');
		const target = event.target;
		if (nav && target instanceof Node && !nav.contains(target)) {
			closeMenu();
		}
	}
	function handleKeydown(event: KeyboardEvent) {
		if (event.key === 'Escape') {
			closeMenu();
		}
	}
	menuToggleButton?.addEventListener('click', () => {
		isMenuOpen ? closeMenu() : openMenu();
	});

	// Close menu when clicking a link inside it
	internalLinks?.addEventListener('click', (event: Event) => {
		const target = event.target as Element | null;
		if (target && target.closest('a')) {
			closeMenu();
		}
	});
	// Close on resize to desktop
	window.addEventListener('resize', () => {
		updateMobileMenuTop();
		if (window.innerWidth > 720) {
			closeMenu();
		}
	});

	// Initialize on page load
	updateHeader();
	updateMobileMenuTop();
</script>
